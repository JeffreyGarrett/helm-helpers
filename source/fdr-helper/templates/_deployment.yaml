{{- define "fdr-helper.deployment.tpl" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application.fullname" . }}
  labels:
{{ include "application.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "application.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations: 
        {{- /* 
      #TODO: 
      checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}  
      need to include back in nested infinite loop */ -}}
      labels:
        app.kubernetes.io/name: {{ include "application.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default (printf "version-%s" .Chart.Version) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "application.fullname" . }}
          env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "application.fullname" . }}
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "application.fullname" . }}
                  key: password
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "application.fullname" . }}
                  key: host
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "application.fullname" . }}
                  key: port
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "application.fullname" . }}
                  key: dbname
            - name: DB_URI
              value: "" 
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

{{- end -}}
{{- define "fdr-helper.deployment" -}}
{{- include "fdr-helper.util.merge" (append . "fdr-helper.deployment.tpl") -}}
{{- end -}}